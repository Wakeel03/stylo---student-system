{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/wakeel/Documents/React Apps/stylo/src/components/TodoSidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './TodoSidebar.css';\nimport { AiFillPlayCircle } from 'react-icons/ai';\nimport db from '../firebase.js';\nimport { getCurrentDate } from '../date';\n\nfunction TodoSidebar({\n  module_id\n}) {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  const [modal, setModal] = useState(false);\n  const [modalText, setModalText] = useState('');\n\n  const add_todo = e => {\n    e.preventDefault();\n    db.collection('todos').add({\n      module_id: module_id,\n      todo: modalText\n    });\n    setModalText('');\n    setModal(false);\n  };\n\n  useEffect(() => {\n    //console.log(db);\n    db.collection('todos').where('module_id', '==', module_id).onSnapshot(snapshot => {\n      setTodos(snapshot.docs.map(doc => ({\n        id: doc.id,\n        todo: doc.data().todo\n      })));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoSidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todos-subheading\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModal(true),\n          children: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo \" + (modal ? 'active' : ''),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"todo\",\n              onChange: e => setModalText(e.target.value),\n              value: modalText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn-secondary\",\n                onClick: add_todo,\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-danger\",\n                onClick: e => {\n                  e.preventDefault();\n                  setModalText('');\n                  setModal(false);\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchbar\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => {\n            e.preventDefault();\n            setSearchText(e.target.value);\n          },\n          placeholder: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }, this), todos.length == 0 ? \"No todos found\" : \"\", todos.filter(val => {\n        if (searchText == \"\") {\n          return val;\n        } else if (val.todo.toLowerCase().includes(searchText.toLowerCase())) {\n          return val;\n        }\n      }).map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: todo.todo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          children: /*#__PURE__*/_jsxDEV(AiFillPlayCircle, {\n            color: \"#8882F1\",\n            size: \"1.2em\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(TodoSidebar, \"fwT+FX48IHJoJ5yI6N1LN89dpZ4=\");\n\n_c = TodoSidebar;\nexport default TodoSidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoSidebar\");","map":{"version":3,"sources":["/home/wakeel/Documents/React Apps/stylo/src/components/TodoSidebar.js"],"names":["React","useEffect","useState","AiFillPlayCircle","db","getCurrentDate","TodoSidebar","module_id","todos","setTodos","searchText","setSearchText","modal","setModal","modalText","setModalText","add_todo","e","preventDefault","collection","add","todo","where","onSnapshot","snapshot","docs","map","doc","id","data","target","value","length","filter","val","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './TodoSidebar.css'\nimport { AiFillPlayCircle } from 'react-icons/ai'\nimport db from '../firebase.js'\nimport { getCurrentDate } from '../date'\n\nfunction TodoSidebar({ module_id }) {\n   \n\n    const [todos, setTodos] = useState([]);\n    const [searchText, setSearchText] = useState('');\n    const [modal, setModal] = useState(false);\n    const [modalText, setModalText] = useState('');\n\n    const add_todo = (e) => {\n        e.preventDefault()\n        db.collection('todos').add({\n            module_id: module_id,\n            todo: modalText,\n        })\n        setModalText('')\n        setModal(false)\n    }\n\n    useEffect(() => {\n        //console.log(db);\n        db.collection('todos').where('module_id', '==', module_id).onSnapshot(snapshot => {\n            setTodos(snapshot.docs.map(doc => ({ id: doc.id, todo: doc.data().todo})))\n        })\n    }, []);\n\n    return (\n        <>\n        <div className=\"todoSidebar\">\n            <div className=\"todos-subheading\">\n                <p>todos</p>\n                <button onClick={() => setModal(true)}>ADD</button>\n            </div>\n          <div className={\"todo \" + (modal ? 'active' : '')}>\n                <div className=\"\">\n                    <form>\n                        <input type=\"text\" placeholder=\"todo\" onChange={(e) => setModalText(e.target.value)} value={modalText} />\n                        <div className=\"actions\">\n                            <button type=\"submit\" className=\"btn-secondary\" onClick={add_todo}>Add</button>\n                            <button className=\"btn-danger\" onClick={(e) => {\n                                e.preventDefault()\n                                setModalText('')\n                                setModal(false)}\n                            }>Cancel</button> \n                        </div>\n                    </form>\n                </div>\n            </div>\n                  <div className=\"searchbar\">\n                    <input onChange={(e) => {e.preventDefault(); setSearchText(e.target.value)}} placeholder=\"Search\"></input>\n                            \n            </div>\n\n            {todos.length == 0 ? \"No todos found\" : \"\"}\n            {todos.filter((val) => {\n                if (searchText == \"\"){\n                    return val\n                }\n                else if (val.todo.toLowerCase().includes(searchText.toLowerCase())){\n                    return val\n                }\n            }).map((todo) => (\n                <div key={todo.id} className=\"todo-card\">\n                  <p>{todo.todo}</p>\n                  <i><AiFillPlayCircle color=\"#8882F1\" size=\"1.2em\" /></i>\n                </div>\n            ))}\n\n            \n\n        </div>\n        </>\n    )\n}\n\nexport default TodoSidebar\n"]},"metadata":{},"sourceType":"module"}